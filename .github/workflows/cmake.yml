name: CMake

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        BUILD_TYPE: [ Release, Debug ]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - name: Cache
      uses: actions/cache@v3.0.7
      with:
        # A list of files, directories, and wildcard patterns to cache and restore
        path: |
          ${{github.workspace}}/lib
          ${{github.workspace}}/build
        # An explicit key for restoring and saving the cache
        key: ${{ runner.os }}-${{ matrix.BUILD_TYPE }}-${{ hashFiles('.gitmodules', 'CMakeLists.txt', 'cmake/**') }}
        restore-keys: ${{ runner.os }}-${{ matrix.BUILD_TYPE }}-${{ hashFiles('.gitmodules', 'CMakeLists.txt', 'cmake/**') }}

    - name: Update Submodules
      run: git submodule update --init --recursive

    - name: Install CMake
      run: |
        sudo apt remove --purge cmake
        hash -r
        sudo snap install cmake --classic
        cmake --version

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{ matrix.BUILD_TYPE }}

    - name: Test
      run: |
        cd ${{github.workspace}}/build
        ctest -VV -C ${{ matrix.BUILD_TYPE }}
      
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.0
      with:
        # Artifact name
        name: Silicon
        # A file, directory or wildcard pattern that describes what to upload
        path: |
          ${{github.workspace}}/build/libSilicon*
          ${{github.workspace}}/build/Testing/Temporary/LastTest.log
